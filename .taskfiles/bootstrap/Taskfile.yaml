---
version: '3'

tasks:

  # talos:
  #   desc: Bootstrap the Talos cluster
  #   dir: '{{.TALOS_DIR}}'
  #   cmds:
  #     - bws run --no-inherit-env -- talhelper genconfig
  #     - talhelper gencommand apply --extra-flags="--insecure" | bash
  #     - until talhelper gencommand bootstrap | bash; do sleep 20; done
  #     - until talhelper gencommand kubeconfig --extra-flags="{{.ROOT_DIR}} --force" | bash; do sleep 10; done
  #   preconditions:
  #     - bws project list
  #     - test -f {{.TALOS_DIR}}/talconfig.yaml
  #     - which talhelper talosctl sops

  # apps:
  #   desc: Bootstrap apps into the Talos cluster
  #   cmd: bash {{.SCRIPTS_DIR}}/bootstrap-apps.sh
  #   preconditions:
  #     - bws project list
  #     - msg: Unsupported bash version, run `brew install bash` to upgrade
  #       sh: '{{if eq OS "darwin"}}test -f /opt/homebrew/bin/bash || test -f /usr/local/bin/bash{{end}}'
  #     - test -f {{.KUBECONFIG}}
  #     - test -f {{.SCRIPTS_DIR}}/bootstrap-apps.sh
  talos:
    desc: Bootstrap the Talos cluster
    dir: '{{.TALOS_DIR}}'
    prompt: Bootstrap the Talos cluster ...?
    cmds:
      - bws run --no-inherit-env -- talhelper genconfig
      - talhelper gencommand apply --extra-flags="--insecure" | bash
      - until talhelper gencommand bootstrap --node 192.168.20.11 | bash; do sleep 5; done
      - talosctl kubeconfig --talosconfig=./clusterconfig/talosconfig /mnt/git/home-ops --force --nodes 192.168.20.11
    vars:
      IP: 192.168.20.11
      RANDOM_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
    preconditions:
      - bws project list
      - talosctl config info
      - which jq talosctl

  apps:
    desc: Bootstrap apps into the Talos cluster
    prompt: Bootstrap apps into the Talos cluster ...?
    dir: '{{.TALOS_DIR}}'
    cmds:
      - kubectl config set-cluster matalos --server https://192.168.20.11:6443
      - defer: talhelper gencommand kubeconfig --extra-flags="{{.ROOT_DIR}} --force" | bash; do sleep 10; done
      - until kubectl wait nodes --for=condition=Ready=False --all --timeout=10m; do sleep 5; done
      - bash {{.SCRIPTS_DIR}}/bootstrap-apps.sh
    vars:
      IP: 192.168.20.11
      CONTEXT:
        sh: talosctl config info --output json | jq --raw-output '.context'
      RANDOM_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
    preconditions:
      - bws project list
      - msg: Unsupported bash version, run `brew install bash` to upgrade
        sh: '{{if eq OS "darwin"}}test -f /opt/homebrew/bin/bash || test -f /usr/local/bin/bash{{end}}'
      - talosctl config info
      - talosctl --nodes {{.RANDOM_CONTROLLER}} get machineconfig
      - test -f {{.BOOTSTRAP_DIR}}/helmfile.d/00-crds.yaml
      - test -f {{.BOOTSTRAP_DIR}}/helmfile.d/01-apps.yaml
      - test -f {{.BOOTSTRAP_DIR}}/resources.yaml.j2



      # - |
      #   if [ -n "{{.IP}}" ]; then
      #     kubectl config set-cluster {{.CONTEXT}} --server https://{{.IP}}:6443
      #   else
      #     kubectl config set-cluster {{.CONTEXT}} --server https://{{.RANDOM_CONTROLLER}}:6443
      #   fi
      # - |
      #   if [ -n "{{.IP}}" ]; then
      #     defer: talosctl kubeconfig --nodes {{.IP}} --force {{.KUBERNETES_DIR}}
      #   else
      #     defer: talosctl kubeconfig --nodes {{.RANDOM_CONTROLLER}} --force {{.KUBERNETES_DIR}}
      #   fi
      # - until kubectl wait nodes --for=condition=Ready=False --all --timeout=10m; do sleep 5; done
      # - bash {{.SCRIPTS_DIR}}/bootstrap-apps.sh
