---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pihole
  namespace: network
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: pihole
  values:
    defaultPodOptions:
      hostUsers: false
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'
        replicas: 3
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 1
          surge: 1
        pod:
          annotations:
            kubectl.kubernetes.io/default-container: pihole
          affinity:
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/name
                          operator: In
                          values:
                            - dnscrypt-proxy
                    topologyKey: kubernetes.io/hostname
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/name
                          operator: In
                          values:
                            - *app
                    topologyKey: kubernetes.io/hostname
          priorityClassName: system-cluster-critical
          dnsPolicy: None
          dnsConfig:
            nameservers:
              - ${DNSCRYPT_IP}
            options:
              - name: ndots
                value: '1'
        statefulset:
          volumeClaimTemplates:
            - name: config
              storageClass: longhorn
              accessMode: ReadWriteOnce
              size: 2Gi
              advancedMounts:
                *app :
                  - path: /etc/pihole
        containers:
          *app :
            image:
              repository: ghcr.io/pi-hole/pihole
              tag: 2025.08.0@sha256:90a1412b3d3037d1c22131402bde19180d898255b584d685c84d943cf9c14821
            env:
              FTLCONF_dns_listeningMode: all
              FTLCONF_dns_dnssec: 'false'
              FTLCONF_dns_upstreams: ${DNSCRYPT_IP};${DNSCRYPT_IP}
              FTLCONF_webserver_interface_boxed: false
              FTLCONF_webserver_interface_theme: default-auto
              FTLCONF_webserver_port: &pihole-port 80
              FTLCONF_webserver_api_password: &pihole-password
                valueFrom:
                  secretKeyRef:
                    name: pihole-secret
                    key: password
            probes:
              liveness: &pihole-probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - /usr/bin/nslookup
                      - pihole
                      - '127.0.0.1'
              startup: *pihole-probes
              readiness: *pihole-probes
            securityContext:
              allowPrivilegeEscalation: false
            resources:
              requests:
                cpu: 100m
              limits:
                # looking at the query log can spike the memory usage very high
                memory: 512Mi
          exporter:
            image:
              repository: ekofr/pihole-exporter
              tag: v1.2.0
            env:
              PIHOLE_HOSTNAME:
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              PIHOLE_PORT: *pihole-port
              PIHOLE_PASSWORD: *pihole-password
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 32Mi
            probes:
              liveness: &exporter-probes
                enabled: true
                custom: true
                spec:
                  failureThreshold: 3
                  initialDelaySeconds: 10
                  periodSeconds: 20
                  successThreshold: 1
                  tcpSocket:
                    port: &exporter-port 9617
                  timeoutSeconds: 1
              readiness: *exporter-probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFileSystem: true
              capabilities: { drop: ['ALL'] }
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
              fsGroupChangePolicy: OnRootMismatch
    service:
      *app :
        controller: *app
        type: LoadBalancer
        ipFamilies: [IPv4]
        ipFamilyPolicy: SingleStack
        annotations:
          lbipam.cilium.io/ips: ${CLUSTER_PIHOLE_IP}
        ports:
          dns-udp:
            port: 53
            protocol: UDP
          dns-tcp:
            port: 53
            protocol: TCP
          http:
            primary: true
            port: *pihole-port
            protocol: HTTP
          https:
            port: 443
            protocol: HTTPS
          prometheus:
            port: *exporter-port
            protocol: HTTP
    route:
      app:
        hostnames:
          - '{{ .Release.Name }}.${SECRET_DOMAIN}'
        parentRefs:
          - name: envoy-internal
            namespace: network
        rules:
          - backendRefs: [identifier: *app]
            sessionPersistence:
              sessionName: *app
              type: Cookie
              absoluteTimeout: 35m
    serviceMonitor:
      app:
        forceRename: *app
        service:
          identifier: *app
        endpoints:
          - port: prometheus # exporter-port's name
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}-config"
        globalMounts:
          - path: /etc/pihole
